/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.MODEL: return createModel();
      case MyDslPackage.LOGIC: return createLogic();
      case MyDslPackage.CONTRACT: return createContract();
      case MyDslPackage.CLAUSE: return createClause();
      case MyDslPackage.CLAUSE_PARAMETER: return createClauseParameter();
      case MyDslPackage.CLAUSE_BODY: return createClauseBody();
      case MyDslPackage.COMMAND: return createCommand();
      case MyDslPackage.DECLARATION: return createDeclaration();
      case MyDslPackage.OTHER_DECLARATION: return createOtherDeclaration();
      case MyDslPackage.ENTITY_DECLARATION: return createEntityDeclaration();
      case MyDslPackage.ENTITY_DECLARATION_PARAM: return createEntityDeclarationParam();
      case MyDslPackage.ENTITIES: return createEntities();
      case MyDslPackage.BASE_ENTITY: return createBaseEntity();
      case MyDslPackage.ENTITY: return createEntity();
      case MyDslPackage.ENUM_ENTITY: return createEnumEntity();
      case MyDslPackage.ENUM_MEMBER: return createEnumMember();
      case MyDslPackage.ENTITY_TYPE: return createEntityType();
      case MyDslPackage.VARIABLE: return createVariable();
      case MyDslPackage.PRIMITIVE_VARIABLE: return createPrimitiveVariable();
      case MyDslPackage.ADVANCED_VARIABLE: return createAdvancedVariable();
      case MyDslPackage.PRIMITIVE: return createPrimitive();
      case MyDslPackage.CONDITION: return createCondition();
      case MyDslPackage.OBLIGATION_WRAPPER: return createObligationWrapper();
      case MyDslPackage.POWER_WRAPPER: return createPowerWrapper();
      case MyDslPackage.CONSTRAINT: return createConstraint();
      case MyDslPackage.PROPOSITION: return createProposition();
      case MyDslPackage.OTHER_FUNCTION: return createOtherFunction();
      case MyDslPackage.PREDICATE_FUNCTION: return createPredicateFunction();
      case MyDslPackage.EVENT: return createEvent();
      case MyDslPackage.POINT: return createPoint();
      case MyDslPackage.POINT_EXPRESSION: return createPointExpression();
      case MyDslPackage.TIMEVALUE: return createTimevalue();
      case MyDslPackage.INTERVAL: return createInterval();
      case MyDslPackage.INTERVAL_EXPRESSION: return createIntervalExpression();
      case MyDslPackage.SITUATION: return createSituation();
      case MyDslPackage.POWER_STATE: return createPowerState();
      case MyDslPackage.OBLIGATION_STATE: return createObligationState();
      case MyDslPackage.CONTRACT_STATE: return createContractState();
      case MyDslPackage.OBLIGATION: return createObligation();
      case MyDslPackage.POWER: return createPower();
      case MyDslPackage.POWER_FUNCTION: return createPowerFunction();
      case MyDslPackage.REF: return createRef();
      case MyDslPackage.EXPRESSION: return createExpression();
      case MyDslPackage.FUNCTION_CALL: return createFunctionCall();
      case MyDslPackage.POR: return createPOr();
      case MyDslPackage.PAND: return createPAnd();
      case MyDslPackage.PEQUALITY: return createPEquality();
      case MyDslPackage.PCOMPARISON: return createPComparison();
      case MyDslPackage.PATOM_RECURSIVE: return createPAtomRecursive();
      case MyDslPackage.NEGATED_PATOM: return createNegatedPAtom();
      case MyDslPackage.PATOM_PREDICATE: return createPAtomPredicate();
      case MyDslPackage.PATOM_FUNCTION: return createPAtomFunction();
      case MyDslPackage.PATOM_ENUM: return createPAtomEnum();
      case MyDslPackage.PATOM_VARIABLE: return createPAtomVariable();
      case MyDslPackage.PATOM_PREDICATE_TRUE_LITERAL: return createPAtomPredicateTrueLiteral();
      case MyDslPackage.PATOM_PREDICATE_FALSE_LITERAL: return createPAtomPredicateFalseLiteral();
      case MyDslPackage.PATOM_DOUBLE_LITERAL: return createPAtomDoubleLiteral();
      case MyDslPackage.PATOM_INT_LITERAL: return createPAtomIntLiteral();
      case MyDslPackage.PATOM_STRING_LITERAL: return createPAtomStringLiteral();
      case MyDslPackage.PATOM_DATE_LITERAL: return createPAtomDateLiteral();
      case MyDslPackage.PREDICATE_FUNCTION_IS_EQUAL: return createPredicateFunctionIsEqual();
      case MyDslPackage.PREDICATE_FUNCTION_IS_OWNER: return createPredicateFunctionIsOwner();
      case MyDslPackage.PREDICATE_FUNCTION_CANNOT_BE_ASSIGNED: return createPredicateFunctionCannotBeAssigned();
      case MyDslPackage.PREDICATE_FUNCTION_HAPPENS: return createPredicateFunctionHappens();
      case MyDslPackage.PREDICATE_FUNCTION_WHAPPENS_BEFORE: return createPredicateFunctionWHappensBefore();
      case MyDslPackage.PREDICATE_FUNCTION_SHAPPENS_BEFORE: return createPredicateFunctionSHappensBefore();
      case MyDslPackage.PREDICATE_FUNCTION_HAPPENS_WITHIN: return createPredicateFunctionHappensWithin();
      case MyDslPackage.PREDICATE_FUNCTION_WHAPPENS_BEFORE_EVENT: return createPredicateFunctionWHappensBeforeEvent();
      case MyDslPackage.PREDICATE_FUNCTION_SHAPPENS_BEFORE_EVENT: return createPredicateFunctionSHappensBeforeEvent();
      case MyDslPackage.PREDICATE_FUNCTION_HAPPENS_AFTER: return createPredicateFunctionHappensAfter();
      case MyDslPackage.PREDICATE_FUNCTION_OCCURS: return createPredicateFunctionOccurs();
      case MyDslPackage.VARIABLE_EVENT: return createVariableEvent();
      case MyDslPackage.POWER_EVENT: return createPowerEvent();
      case MyDslPackage.OBLIGATION_EVENT: return createObligationEvent();
      case MyDslPackage.CONTRACT_EVENT: return createContractEvent();
      case MyDslPackage.POINT_FUNCTION: return createPointFunction();
      case MyDslPackage.POINT_ATOM_PARAMETER_DOT_EXPRESSION: return createPointAtomParameterDotExpression();
      case MyDslPackage.POINT_ATOM_OBLIGATION_EVENT: return createPointAtomObligationEvent();
      case MyDslPackage.POINT_ATOM_CONTRACT_EVENT: return createPointAtomContractEvent();
      case MyDslPackage.POINT_ATOM_POWER_EVENT: return createPointAtomPowerEvent();
      case MyDslPackage.TIMEVALUE_INT: return createTimevalueInt();
      case MyDslPackage.TIMEVALUE_VARIABLE: return createTimevalueVariable();
      case MyDslPackage.INTERVAL_FUNCTION: return createIntervalFunction();
      case MyDslPackage.SITUATION_EXPRESSION: return createSituationExpression();
      case MyDslPackage.PF_OBLIGATION_SUSPENDED: return createPFObligationSuspended();
      case MyDslPackage.PF_OBLIGATION_RESUMED: return createPFObligationResumed();
      case MyDslPackage.PF_OBLIGATION_DISCHARGED: return createPFObligationDischarged();
      case MyDslPackage.PF_OBLIGATION_TERMINATED: return createPFObligationTerminated();
      case MyDslPackage.PF_OBLIGATION_TRIGGERED: return createPFObligationTriggered();
      case MyDslPackage.PF_CONTRACT_SUSPENDED: return createPFContractSuspended();
      case MyDslPackage.PF_CONTRACT_RESUMED: return createPFContractResumed();
      case MyDslPackage.PF_CONTRACT_TERMINATED: return createPFContractTerminated();
      case MyDslPackage.VARIABLE_DOT_EXPRESSION: return createVariableDotExpression();
      case MyDslPackage.VARIABLE_REF: return createVariableRef();
      case MyDslPackage.OR: return createOr();
      case MyDslPackage.AND: return createAnd();
      case MyDslPackage.EQUALITY: return createEquality();
      case MyDslPackage.COMPARISON: return createComparison();
      case MyDslPackage.PLUS: return createPlus();
      case MyDslPackage.MINUS: return createMinus();
      case MyDslPackage.MULTI: return createMulti();
      case MyDslPackage.DIV: return createDiv();
      case MyDslPackage.PRIMARY_EXPRESSION_RECURSIVE: return createPrimaryExpressionRecursive();
      case MyDslPackage.PRIMARY_EXPRESSION_FUNCTION_CALL: return createPrimaryExpressionFunctionCall();
      case MyDslPackage.NEGATED_PRIMARY_EXPRESSION: return createNegatedPrimaryExpression();
      case MyDslPackage.ATOMIC_EXPRESSION_TRUE: return createAtomicExpressionTrue();
      case MyDslPackage.ATOMIC_EXPRESSION_FALSE: return createAtomicExpressionFalse();
      case MyDslPackage.ATOMIC_EXPRESSION_DOUBLE: return createAtomicExpressionDouble();
      case MyDslPackage.ATOMIC_EXPRESSION_INT: return createAtomicExpressionInt();
      case MyDslPackage.ATOMIC_EXPRESSION_DATE: return createAtomicExpressionDate();
      case MyDslPackage.ATOMIC_EXPRESSION_ENUM: return createAtomicExpressionEnum();
      case MyDslPackage.ATOMIC_EXPRESSION_STRING: return createAtomicExpressionString();
      case MyDslPackage.ATOMIC_EXPRESSION_PARAMETER: return createAtomicExpressionParameter();
      case MyDslPackage.TWO_ARG_MATH_FUNCTION: return createTwoArgMathFunction();
      case MyDslPackage.ONE_ARG_MATH_FUNCTION: return createOneArgMathFunction();
      case MyDslPackage.THREE_ARG_STRING_FUNCTION: return createThreeArgStringFunction();
      case MyDslPackage.TWO_ARG_STRING_FUNCTION: return createTwoArgStringFunction();
      case MyDslPackage.ONE_ARG_STRING_FUNCTION: return createOneArgStringFunction();
      case MyDslPackage.THREE_ARG_DATE_FUNCTION: return createThreeArgDateFunction();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Logic createLogic()
  {
    LogicImpl logic = new LogicImpl();
    return logic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Contract createContract()
  {
    ContractImpl contract = new ContractImpl();
    return contract;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Clause createClause()
  {
    ClauseImpl clause = new ClauseImpl();
    return clause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClauseParameter createClauseParameter()
  {
    ClauseParameterImpl clauseParameter = new ClauseParameterImpl();
    return clauseParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClauseBody createClauseBody()
  {
    ClauseBodyImpl clauseBody = new ClauseBodyImpl();
    return clauseBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Command createCommand()
  {
    CommandImpl command = new CommandImpl();
    return command;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Declaration createDeclaration()
  {
    DeclarationImpl declaration = new DeclarationImpl();
    return declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OtherDeclaration createOtherDeclaration()
  {
    OtherDeclarationImpl otherDeclaration = new OtherDeclarationImpl();
    return otherDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityDeclaration createEntityDeclaration()
  {
    EntityDeclarationImpl entityDeclaration = new EntityDeclarationImpl();
    return entityDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityDeclarationParam createEntityDeclarationParam()
  {
    EntityDeclarationParamImpl entityDeclarationParam = new EntityDeclarationParamImpl();
    return entityDeclarationParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entities createEntities()
  {
    EntitiesImpl entities = new EntitiesImpl();
    return entities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BaseEntity createBaseEntity()
  {
    BaseEntityImpl baseEntity = new BaseEntityImpl();
    return baseEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumEntity createEnumEntity()
  {
    EnumEntityImpl enumEntity = new EnumEntityImpl();
    return enumEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumMember createEnumMember()
  {
    EnumMemberImpl enumMember = new EnumMemberImpl();
    return enumMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityType createEntityType()
  {
    EntityTypeImpl entityType = new EntityTypeImpl();
    return entityType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable createVariable()
  {
    VariableImpl variable = new VariableImpl();
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrimitiveVariable createPrimitiveVariable()
  {
    PrimitiveVariableImpl primitiveVariable = new PrimitiveVariableImpl();
    return primitiveVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AdvancedVariable createAdvancedVariable()
  {
    AdvancedVariableImpl advancedVariable = new AdvancedVariableImpl();
    return advancedVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Primitive createPrimitive()
  {
    PrimitiveImpl primitive = new PrimitiveImpl();
    return primitive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition createCondition()
  {
    ConditionImpl condition = new ConditionImpl();
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObligationWrapper createObligationWrapper()
  {
    ObligationWrapperImpl obligationWrapper = new ObligationWrapperImpl();
    return obligationWrapper;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PowerWrapper createPowerWrapper()
  {
    PowerWrapperImpl powerWrapper = new PowerWrapperImpl();
    return powerWrapper;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Constraint createConstraint()
  {
    ConstraintImpl constraint = new ConstraintImpl();
    return constraint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Proposition createProposition()
  {
    PropositionImpl proposition = new PropositionImpl();
    return proposition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OtherFunction createOtherFunction()
  {
    OtherFunctionImpl otherFunction = new OtherFunctionImpl();
    return otherFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunction createPredicateFunction()
  {
    PredicateFunctionImpl predicateFunction = new PredicateFunctionImpl();
    return predicateFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event createEvent()
  {
    EventImpl event = new EventImpl();
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Point createPoint()
  {
    PointImpl point = new PointImpl();
    return point;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PointExpression createPointExpression()
  {
    PointExpressionImpl pointExpression = new PointExpressionImpl();
    return pointExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Timevalue createTimevalue()
  {
    TimevalueImpl timevalue = new TimevalueImpl();
    return timevalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Interval createInterval()
  {
    IntervalImpl interval = new IntervalImpl();
    return interval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntervalExpression createIntervalExpression()
  {
    IntervalExpressionImpl intervalExpression = new IntervalExpressionImpl();
    return intervalExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Situation createSituation()
  {
    SituationImpl situation = new SituationImpl();
    return situation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PowerState createPowerState()
  {
    PowerStateImpl powerState = new PowerStateImpl();
    return powerState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObligationState createObligationState()
  {
    ObligationStateImpl obligationState = new ObligationStateImpl();
    return obligationState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContractState createContractState()
  {
    ContractStateImpl contractState = new ContractStateImpl();
    return contractState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Obligation createObligation()
  {
    ObligationImpl obligation = new ObligationImpl();
    return obligation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Power createPower()
  {
    PowerImpl power = new PowerImpl();
    return power;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PowerFunction createPowerFunction()
  {
    PowerFunctionImpl powerFunction = new PowerFunctionImpl();
    return powerFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Ref createRef()
  {
    RefImpl ref = new RefImpl();
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionCall createFunctionCall()
  {
    FunctionCallImpl functionCall = new FunctionCallImpl();
    return functionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public POr createPOr()
  {
    POrImpl pOr = new POrImpl();
    return pOr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAnd createPAnd()
  {
    PAndImpl pAnd = new PAndImpl();
    return pAnd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PEquality createPEquality()
  {
    PEqualityImpl pEquality = new PEqualityImpl();
    return pEquality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PComparison createPComparison()
  {
    PComparisonImpl pComparison = new PComparisonImpl();
    return pComparison;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomRecursive createPAtomRecursive()
  {
    PAtomRecursiveImpl pAtomRecursive = new PAtomRecursiveImpl();
    return pAtomRecursive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NegatedPAtom createNegatedPAtom()
  {
    NegatedPAtomImpl negatedPAtom = new NegatedPAtomImpl();
    return negatedPAtom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomPredicate createPAtomPredicate()
  {
    PAtomPredicateImpl pAtomPredicate = new PAtomPredicateImpl();
    return pAtomPredicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomFunction createPAtomFunction()
  {
    PAtomFunctionImpl pAtomFunction = new PAtomFunctionImpl();
    return pAtomFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomEnum createPAtomEnum()
  {
    PAtomEnumImpl pAtomEnum = new PAtomEnumImpl();
    return pAtomEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomVariable createPAtomVariable()
  {
    PAtomVariableImpl pAtomVariable = new PAtomVariableImpl();
    return pAtomVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomPredicateTrueLiteral createPAtomPredicateTrueLiteral()
  {
    PAtomPredicateTrueLiteralImpl pAtomPredicateTrueLiteral = new PAtomPredicateTrueLiteralImpl();
    return pAtomPredicateTrueLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomPredicateFalseLiteral createPAtomPredicateFalseLiteral()
  {
    PAtomPredicateFalseLiteralImpl pAtomPredicateFalseLiteral = new PAtomPredicateFalseLiteralImpl();
    return pAtomPredicateFalseLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomDoubleLiteral createPAtomDoubleLiteral()
  {
    PAtomDoubleLiteralImpl pAtomDoubleLiteral = new PAtomDoubleLiteralImpl();
    return pAtomDoubleLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomIntLiteral createPAtomIntLiteral()
  {
    PAtomIntLiteralImpl pAtomIntLiteral = new PAtomIntLiteralImpl();
    return pAtomIntLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomStringLiteral createPAtomStringLiteral()
  {
    PAtomStringLiteralImpl pAtomStringLiteral = new PAtomStringLiteralImpl();
    return pAtomStringLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PAtomDateLiteral createPAtomDateLiteral()
  {
    PAtomDateLiteralImpl pAtomDateLiteral = new PAtomDateLiteralImpl();
    return pAtomDateLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionIsEqual createPredicateFunctionIsEqual()
  {
    PredicateFunctionIsEqualImpl predicateFunctionIsEqual = new PredicateFunctionIsEqualImpl();
    return predicateFunctionIsEqual;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionIsOwner createPredicateFunctionIsOwner()
  {
    PredicateFunctionIsOwnerImpl predicateFunctionIsOwner = new PredicateFunctionIsOwnerImpl();
    return predicateFunctionIsOwner;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionCannotBeAssigned createPredicateFunctionCannotBeAssigned()
  {
    PredicateFunctionCannotBeAssignedImpl predicateFunctionCannotBeAssigned = new PredicateFunctionCannotBeAssignedImpl();
    return predicateFunctionCannotBeAssigned;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionHappens createPredicateFunctionHappens()
  {
    PredicateFunctionHappensImpl predicateFunctionHappens = new PredicateFunctionHappensImpl();
    return predicateFunctionHappens;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionWHappensBefore createPredicateFunctionWHappensBefore()
  {
    PredicateFunctionWHappensBeforeImpl predicateFunctionWHappensBefore = new PredicateFunctionWHappensBeforeImpl();
    return predicateFunctionWHappensBefore;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionSHappensBefore createPredicateFunctionSHappensBefore()
  {
    PredicateFunctionSHappensBeforeImpl predicateFunctionSHappensBefore = new PredicateFunctionSHappensBeforeImpl();
    return predicateFunctionSHappensBefore;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionHappensWithin createPredicateFunctionHappensWithin()
  {
    PredicateFunctionHappensWithinImpl predicateFunctionHappensWithin = new PredicateFunctionHappensWithinImpl();
    return predicateFunctionHappensWithin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionWHappensBeforeEvent createPredicateFunctionWHappensBeforeEvent()
  {
    PredicateFunctionWHappensBeforeEventImpl predicateFunctionWHappensBeforeEvent = new PredicateFunctionWHappensBeforeEventImpl();
    return predicateFunctionWHappensBeforeEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionSHappensBeforeEvent createPredicateFunctionSHappensBeforeEvent()
  {
    PredicateFunctionSHappensBeforeEventImpl predicateFunctionSHappensBeforeEvent = new PredicateFunctionSHappensBeforeEventImpl();
    return predicateFunctionSHappensBeforeEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionHappensAfter createPredicateFunctionHappensAfter()
  {
    PredicateFunctionHappensAfterImpl predicateFunctionHappensAfter = new PredicateFunctionHappensAfterImpl();
    return predicateFunctionHappensAfter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicateFunctionOccurs createPredicateFunctionOccurs()
  {
    PredicateFunctionOccursImpl predicateFunctionOccurs = new PredicateFunctionOccursImpl();
    return predicateFunctionOccurs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableEvent createVariableEvent()
  {
    VariableEventImpl variableEvent = new VariableEventImpl();
    return variableEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PowerEvent createPowerEvent()
  {
    PowerEventImpl powerEvent = new PowerEventImpl();
    return powerEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObligationEvent createObligationEvent()
  {
    ObligationEventImpl obligationEvent = new ObligationEventImpl();
    return obligationEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContractEvent createContractEvent()
  {
    ContractEventImpl contractEvent = new ContractEventImpl();
    return contractEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PointFunction createPointFunction()
  {
    PointFunctionImpl pointFunction = new PointFunctionImpl();
    return pointFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PointAtomParameterDotExpression createPointAtomParameterDotExpression()
  {
    PointAtomParameterDotExpressionImpl pointAtomParameterDotExpression = new PointAtomParameterDotExpressionImpl();
    return pointAtomParameterDotExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PointAtomObligationEvent createPointAtomObligationEvent()
  {
    PointAtomObligationEventImpl pointAtomObligationEvent = new PointAtomObligationEventImpl();
    return pointAtomObligationEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PointAtomContractEvent createPointAtomContractEvent()
  {
    PointAtomContractEventImpl pointAtomContractEvent = new PointAtomContractEventImpl();
    return pointAtomContractEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PointAtomPowerEvent createPointAtomPowerEvent()
  {
    PointAtomPowerEventImpl pointAtomPowerEvent = new PointAtomPowerEventImpl();
    return pointAtomPowerEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TimevalueInt createTimevalueInt()
  {
    TimevalueIntImpl timevalueInt = new TimevalueIntImpl();
    return timevalueInt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TimevalueVariable createTimevalueVariable()
  {
    TimevalueVariableImpl timevalueVariable = new TimevalueVariableImpl();
    return timevalueVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntervalFunction createIntervalFunction()
  {
    IntervalFunctionImpl intervalFunction = new IntervalFunctionImpl();
    return intervalFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SituationExpression createSituationExpression()
  {
    SituationExpressionImpl situationExpression = new SituationExpressionImpl();
    return situationExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PFObligationSuspended createPFObligationSuspended()
  {
    PFObligationSuspendedImpl pfObligationSuspended = new PFObligationSuspendedImpl();
    return pfObligationSuspended;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PFObligationResumed createPFObligationResumed()
  {
    PFObligationResumedImpl pfObligationResumed = new PFObligationResumedImpl();
    return pfObligationResumed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PFObligationDischarged createPFObligationDischarged()
  {
    PFObligationDischargedImpl pfObligationDischarged = new PFObligationDischargedImpl();
    return pfObligationDischarged;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PFObligationTerminated createPFObligationTerminated()
  {
    PFObligationTerminatedImpl pfObligationTerminated = new PFObligationTerminatedImpl();
    return pfObligationTerminated;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PFObligationTriggered createPFObligationTriggered()
  {
    PFObligationTriggeredImpl pfObligationTriggered = new PFObligationTriggeredImpl();
    return pfObligationTriggered;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PFContractSuspended createPFContractSuspended()
  {
    PFContractSuspendedImpl pfContractSuspended = new PFContractSuspendedImpl();
    return pfContractSuspended;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PFContractResumed createPFContractResumed()
  {
    PFContractResumedImpl pfContractResumed = new PFContractResumedImpl();
    return pfContractResumed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PFContractTerminated createPFContractTerminated()
  {
    PFContractTerminatedImpl pfContractTerminated = new PFContractTerminatedImpl();
    return pfContractTerminated;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableDotExpression createVariableDotExpression()
  {
    VariableDotExpressionImpl variableDotExpression = new VariableDotExpressionImpl();
    return variableDotExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableRef createVariableRef()
  {
    VariableRefImpl variableRef = new VariableRefImpl();
    return variableRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Or createOr()
  {
    OrImpl or = new OrImpl();
    return or;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public And createAnd()
  {
    AndImpl and = new AndImpl();
    return and;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Equality createEquality()
  {
    EqualityImpl equality = new EqualityImpl();
    return equality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Comparison createComparison()
  {
    ComparisonImpl comparison = new ComparisonImpl();
    return comparison;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Plus createPlus()
  {
    PlusImpl plus = new PlusImpl();
    return plus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Minus createMinus()
  {
    MinusImpl minus = new MinusImpl();
    return minus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Multi createMulti()
  {
    MultiImpl multi = new MultiImpl();
    return multi;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Div createDiv()
  {
    DivImpl div = new DivImpl();
    return div;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrimaryExpressionRecursive createPrimaryExpressionRecursive()
  {
    PrimaryExpressionRecursiveImpl primaryExpressionRecursive = new PrimaryExpressionRecursiveImpl();
    return primaryExpressionRecursive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrimaryExpressionFunctionCall createPrimaryExpressionFunctionCall()
  {
    PrimaryExpressionFunctionCallImpl primaryExpressionFunctionCall = new PrimaryExpressionFunctionCallImpl();
    return primaryExpressionFunctionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NegatedPrimaryExpression createNegatedPrimaryExpression()
  {
    NegatedPrimaryExpressionImpl negatedPrimaryExpression = new NegatedPrimaryExpressionImpl();
    return negatedPrimaryExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomicExpressionTrue createAtomicExpressionTrue()
  {
    AtomicExpressionTrueImpl atomicExpressionTrue = new AtomicExpressionTrueImpl();
    return atomicExpressionTrue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomicExpressionFalse createAtomicExpressionFalse()
  {
    AtomicExpressionFalseImpl atomicExpressionFalse = new AtomicExpressionFalseImpl();
    return atomicExpressionFalse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomicExpressionDouble createAtomicExpressionDouble()
  {
    AtomicExpressionDoubleImpl atomicExpressionDouble = new AtomicExpressionDoubleImpl();
    return atomicExpressionDouble;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomicExpressionInt createAtomicExpressionInt()
  {
    AtomicExpressionIntImpl atomicExpressionInt = new AtomicExpressionIntImpl();
    return atomicExpressionInt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomicExpressionDate createAtomicExpressionDate()
  {
    AtomicExpressionDateImpl atomicExpressionDate = new AtomicExpressionDateImpl();
    return atomicExpressionDate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomicExpressionEnum createAtomicExpressionEnum()
  {
    AtomicExpressionEnumImpl atomicExpressionEnum = new AtomicExpressionEnumImpl();
    return atomicExpressionEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomicExpressionString createAtomicExpressionString()
  {
    AtomicExpressionStringImpl atomicExpressionString = new AtomicExpressionStringImpl();
    return atomicExpressionString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomicExpressionParameter createAtomicExpressionParameter()
  {
    AtomicExpressionParameterImpl atomicExpressionParameter = new AtomicExpressionParameterImpl();
    return atomicExpressionParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TwoArgMathFunction createTwoArgMathFunction()
  {
    TwoArgMathFunctionImpl twoArgMathFunction = new TwoArgMathFunctionImpl();
    return twoArgMathFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OneArgMathFunction createOneArgMathFunction()
  {
    OneArgMathFunctionImpl oneArgMathFunction = new OneArgMathFunctionImpl();
    return oneArgMathFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ThreeArgStringFunction createThreeArgStringFunction()
  {
    ThreeArgStringFunctionImpl threeArgStringFunction = new ThreeArgStringFunctionImpl();
    return threeArgStringFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TwoArgStringFunction createTwoArgStringFunction()
  {
    TwoArgStringFunctionImpl twoArgStringFunction = new TwoArgStringFunctionImpl();
    return twoArgStringFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OneArgStringFunction createOneArgStringFunction()
  {
    OneArgStringFunctionImpl oneArgStringFunction = new OneArgStringFunctionImpl();
    return oneArgStringFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ThreeArgDateFunction createThreeArgDateFunction()
  {
    ThreeArgDateFunctionImpl threeArgDateFunction = new ThreeArgDateFunctionImpl();
    return threeArgDateFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
