/**
 * generated by Xtext 2.27.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.PowerEvent;
import org.xtext.example.mydsl.myDsl.PowerWrapper;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Power Event</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.PowerEventImpl#getEventName <em>Event Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.PowerEventImpl#getPowerVariable <em>Power Variable</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PowerEventImpl extends EventImpl implements PowerEvent
{
  /**
   * The default value of the '{@link #getEventName() <em>Event Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEventName()
   * @generated
   * @ordered
   */
  protected static final String EVENT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEventName() <em>Event Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEventName()
   * @generated
   * @ordered
   */
  protected String eventName = EVENT_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getPowerVariable() <em>Power Variable</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPowerVariable()
   * @generated
   * @ordered
   */
  protected PowerWrapper powerVariable;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PowerEventImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.POWER_EVENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEventName()
  {
    return eventName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEventName(String newEventName)
  {
    String oldEventName = eventName;
    eventName = newEventName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.POWER_EVENT__EVENT_NAME, oldEventName, eventName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PowerWrapper getPowerVariable()
  {
    if (powerVariable != null && powerVariable.eIsProxy())
    {
      InternalEObject oldPowerVariable = (InternalEObject)powerVariable;
      powerVariable = (PowerWrapper)eResolveProxy(oldPowerVariable);
      if (powerVariable != oldPowerVariable)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.POWER_EVENT__POWER_VARIABLE, oldPowerVariable, powerVariable));
      }
    }
    return powerVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PowerWrapper basicGetPowerVariable()
  {
    return powerVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPowerVariable(PowerWrapper newPowerVariable)
  {
    PowerWrapper oldPowerVariable = powerVariable;
    powerVariable = newPowerVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.POWER_EVENT__POWER_VARIABLE, oldPowerVariable, powerVariable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.POWER_EVENT__EVENT_NAME:
        return getEventName();
      case MyDslPackage.POWER_EVENT__POWER_VARIABLE:
        if (resolve) return getPowerVariable();
        return basicGetPowerVariable();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.POWER_EVENT__EVENT_NAME:
        setEventName((String)newValue);
        return;
      case MyDslPackage.POWER_EVENT__POWER_VARIABLE:
        setPowerVariable((PowerWrapper)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.POWER_EVENT__EVENT_NAME:
        setEventName(EVENT_NAME_EDEFAULT);
        return;
      case MyDslPackage.POWER_EVENT__POWER_VARIABLE:
        setPowerVariable((PowerWrapper)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.POWER_EVENT__EVENT_NAME:
        return EVENT_NAME_EDEFAULT == null ? eventName != null : !EVENT_NAME_EDEFAULT.equals(eventName);
      case MyDslPackage.POWER_EVENT__POWER_VARIABLE:
        return powerVariable != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (eventName: ");
    result.append(eventName);
    result.append(')');
    return result.toString();
  }

} //PowerEventImpl
